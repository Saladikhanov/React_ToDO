{"version":3,"sources":["modals/CreateTask.js","modals/EditTask.js","componets/Card.js","componets/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","modal","toggle","save","useState","taskName","setTaskName","description","setDescription","dateCreated","Date","toTimeString","handleChange","e","name","target","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","taskObj","console","log","EditTask","updateTask","useEffect","Name","Description","preventDefault","tempObj","Card","index","deleteTask","updateListArray","setModal","style","window","confirm","DateCreated","obj","TodoList","taskList","setTasklist","arr","localStorage","getItem","JSON","parse","tempList","splice","setItem","stringify","location","reload","map","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5e1ee60.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst CreateTask = ({ modal, toggle, save }) => {\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n  let dateCreated = new Date().toTimeString();\n  \n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    if(name === \"taskName\") {\n      setTaskName(value)\n    }\n    else{\n      setDescription(value)\n    }\n\n  }\n\n  const handleSave = () => {\n    let taskObj = {}\n    \n    taskObj[\"DateCreated\"] = dateCreated\n    taskObj[\"Name\"] = taskName\n    taskObj[\"Description\"] = description\n    save(taskObj)\n    console.log(taskObj);\n  }\n  return (\n    <Modal isOpen={modal} toggle={toggle} >\n        <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n        <ModalBody>\n          <form>\n            \n            <div className = \"form-group\">\n              <label>Task Name</label>\n              <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n            </div>\n            <div className = \"form-group\">\n              <label>Description</label>\n              <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n            </div>\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n  );\n};\n\nexport default CreateTask;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst EditTask = ({ modal, toggle, updateTask, taskObj }) => {\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n//   const [dateCreated, setDate] = useState('');\n  \n//   let dateCreated = new Date().toTimeString();\n\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    if(name === \"taskName\") {\n      setTaskName(value)\n    }\n    else{\n      setDescription(value)\n    }\n\n  }\nuseEffect(() => {\nsetTaskName(taskObj.Name)\nsetDescription(taskObj.Description)\n// setDate(taskObj.dateCreated)\n// console.log(dateCreated);\n}, [])\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    let tempObj = {}\n    let dateCreated = new Date().toTimeString()\n    taskObj[\"DateCreated\"] = dateCreated\n    tempObj['Name'] = taskName\n    tempObj['Description'] = description\n    updateTask(tempObj)\n  }\n\n  return (\n    <Modal isOpen={modal} toggle={toggle} >\n        <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n        <ModalBody>\n          <form>\n            <div className = \"form-group\">\n              <label>Task Name</label>\n              <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n            </div>\n            <div className = \"form-group\">\n              <label>Description</label>\n              <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n            </div>\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n  );\n};\n\nexport default EditTask;\n","import React, {useState} from 'react';\nimport EditTask from '../modals/EditTask';\n\n\nconst Card = ({taskObj, index, deleteTask,updateListArray }) => {\n   const [modal, setModal] = useState(false);\n   const toggle = () => {\n       setModal(!modal)\n   }\n   const updateTask = (obj) => {\n       updateListArray(obj, index)\n   }\n   const handleDelete = () => {\n       deleteTask(index)\n   }\n   const confirmDelete = () => {\n       if (window.confirm(\"Are you sure you want to delete your note?\")) {\n           handleDelete()\n       } \n   }\n    return (\n        <div className = \"card-wrapper mr-5\">\n            <div className = \"card-top\"></div>\n            <div className = \"task-holder\">\n                \n                <span className = \"card-header\" >{taskObj.Name}</span>\n                <p className = \"Description\">{taskObj.Description}</p>\n\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}>\n                    <i className = \"far fa-edit\" style={{ \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}></i>\n                    <i className=\"fas fa-trash-alt\" style = {{ \"cursor\" : \"pointer\"}} onClick = {confirmDelete} ></i>\n                </div>\n                <div>{taskObj.DateCreated}</div>\n        </div>\n        <EditTask modal = {modal} toggle = {toggle} updateTask = {updateTask} taskObj = {taskObj}/>\n        </div>\n    );\n};\n\nexport default Card;","import React, { useEffect, useState } from \"react\";\nimport CreateTask from '../modals/CreateTask'\nimport Card from \"./Card\";\n\nconst TodoList = () => {\n  const [modal, setModal] = useState(false);\n  const [taskList, setTasklist] = useState([]);\n\n  useEffect(() => {\n    let arr = localStorage.getItem(\"taskList\")\n    \n    if(arr){\n      let obj = JSON.parse(arr)\n      setTasklist(obj)\n    }\n  }, [])\n\nconst deleteTask = (index) => {\n  let tempList = taskList\n  tempList.splice(index, 1)\n  localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n  setTasklist(tempList)\n  window.location.reload()\n\n}\n\nconst updateListArray = (obj, index) => {\nlet tempList = taskList\ntempList[index] = obj\nlocalStorage.setItem(\"taskList\", JSON.stringify(tempList))\nsetTasklist(tempList)\nwindow.location.reload()\n}\n\n  const toggle = () => {\n    setModal(!modal);\n  }\n  const saveTask = (taskObj) => {\n    let tempList = taskList\n    tempList.push(taskObj)\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n    setModal(false)\n    setTasklist(taskList)\n    console.log(taskList);\n  }\n  return (\n    <div className=\"react-body\">\n    \n      <div className=\"header text-center\">\n        <h3>Todo List</h3>\n        <button className=\"btn btn-primary mt-2\" onClick = {() => setModal(true)}>Create Task</button>\n      </div>\n      <div className=\"task-container\">\n        {taskList && taskList.map((obj , index) => <Card taskObj = {obj} index = {index} deleteTask = {deleteTask} updateListArray = {updateListArray}/>)}\n        \n      </div>\n      <CreateTask toggle={toggle} modal={modal} save = {saveTask}/>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import \"./App.css\";\n// import { useEffect, useState } from \"react\";\n\nimport TodoList from \"./componets/TodoList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}